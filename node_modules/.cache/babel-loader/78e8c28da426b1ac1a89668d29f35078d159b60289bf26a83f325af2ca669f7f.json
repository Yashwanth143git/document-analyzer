{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashu\\\\Desktop\\\\dc\\\\src\\\\components\\\\ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./Components.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = ({\n  documentData,\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (documentData && messages.length === 0) {\n      setTimeout(() => {\n        setMessages([{\n          id: 1,\n          type: \"summary\",\n          content: documentData.summary,\n          timestamp: new Date(),\n          isBot: true\n        }]);\n      }, 500);\n    }\n  }, [documentData, messages.length]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isTyping]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  const handleSendMessage = () => {\n    if (!inputMessage.trim()) return;\n    const userMessage = {\n      id: messages.length + 1,\n      type: \"text\",\n      content: inputMessage,\n      timestamp: new Date(),\n      isBot: false\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage(\"\");\n    setIsTyping(true);\n    setTimeout(() => {\n      const responses = [\"Based on the document analysis, this topic is covered in section 3.2. The key points mention...\", \"The document suggests that this approach has shown 25% improvement in efficiency based on the data in chapter 4.\", \"This is addressed in the recommendations section. The proposed strategy involves three main phases...\", \"The analysis indicates this is a critical area with significant growth potential, as shown in the market data.\"];\n      const botMessage = {\n        id: messages.length + 2,\n        type: \"text\",\n        content: responses[Math.floor(Math.random() * responses.length)],\n        timestamp: new Date(),\n        isBot: true\n      };\n      setMessages(prev => [...prev, botMessage]);\n      setIsTyping(false);\n    }, 2000);\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      handleSendMessage();\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"DocuAssistant AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status\",\n            children: \"Online  Analyzing your document\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-chat\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Hello! I have analyzed your document and I am ready to answer your questions. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.isBot ? \"bot\" : \"user\"}`,\n        children: [message.isBot && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [message.type === \"summary\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \" Document Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-content\",\n              children: message.content.split(\"\\n\").map((line, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: line\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-time\",\n            children: message.timestamp.toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), !message.isBot && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 32\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot typing\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Ask about your document...\",\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          className: \"send-button\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestions\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Try asking:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setInputMessage(\"What are the main points?\"),\n          children: \"Main points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setInputMessage(\"Summarize the recommendations\"),\n          children: \"Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setInputMessage(\"Key findings?\"),\n          children: \"Key findings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"T7cfCH4aBj/T9voiUe3TpYXafpM=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ChatBot","documentData","isOpen","onClose","_s","messages","setMessages","inputMessage","setInputMessage","isTyping","setIsTyping","messagesEndRef","length","setTimeout","id","type","content","summary","timestamp","Date","isBot","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","prev","responses","botMessage","Math","floor","random","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","message","split","line","index","toLocaleTimeString","hour","minute","ref","value","onChange","target","onKeyPress","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/yashu/Desktop/dc/src/components/ChatBot.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"./Components.css\";\n\nconst ChatBot = ({ documentData, isOpen, onClose }) => {\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    if (documentData && messages.length === 0) {\n      setTimeout(() => {\n        setMessages([{\n          id: 1,\n          type: \"summary\",\n          content: documentData.summary,\n          timestamp: new Date(),\n          isBot: true\n        }]);\n      }, 500);\n    }\n  }, [documentData, messages.length]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isTyping]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const handleSendMessage = () => {\n    if (!inputMessage.trim()) return;\n\n    const userMessage = {\n      id: messages.length + 1,\n      type: \"text\",\n      content: inputMessage,\n      timestamp: new Date(),\n      isBot: false\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage(\"\");\n    setIsTyping(true);\n\n    setTimeout(() => {\n      const responses = [\n        \"Based on the document analysis, this topic is covered in section 3.2. The key points mention...\",\n        \"The document suggests that this approach has shown 25% improvement in efficiency based on the data in chapter 4.\",\n        \"This is addressed in the recommendations section. The proposed strategy involves three main phases...\",\n        \"The analysis indicates this is a critical area with significant growth potential, as shown in the market data.\"\n      ];\n      \n      const botMessage = {\n        id: messages.length + 2,\n        type: \"text\",\n        content: responses[Math.floor(Math.random() * responses.length)],\n        timestamp: new Date(),\n        isBot: true\n      };\n\n      setMessages(prev => [...prev, botMessage]);\n      setIsTyping(false);\n    }, 2000);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      handleSendMessage();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chatbot-header\">\n        <div className=\"chatbot-info\">\n          <div className=\"chatbot-avatar\"></div>\n          <div>\n            <h3>DocuAssistant AI</h3>\n            <span className=\"status\">Online  Analyzing your document</span>\n          </div>\n        </div>\n        <button className=\"close-chat\" onClick={onClose}></button>\n      </div>\n\n      <div className=\"chatbot-messages\">\n        <div className=\"welcome-message\">\n          <p>Hello! I have analyzed your document and I am ready to answer your questions. </p>\n        </div>\n\n        {messages.map((message) => (\n          <div key={message.id} className={`message ${message.isBot ? \"bot\" : \"user\"}`}>\n            {message.isBot && <div className=\"bot-avatar\"></div>}\n            <div className=\"message-content\">\n              {message.type === \"summary\" ? (\n                <div className=\"summary-message\">\n                  <h4> Document Summary</h4>\n                  <div className=\"summary-content\">\n                    {message.content.split(\"\\n\").map((line, index) => (\n                      <p key={index}>{line}</p>\n                    ))}\n                  </div>\n                </div>\n              ) : (\n                <p>{message.content}</p>\n              )}\n              <span className=\"message-time\">\n                {message.timestamp.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })}\n              </span>\n            </div>\n            {!message.isBot && <div className=\"user-avatar\"></div>}\n          </div>\n        ))}\n\n        {isTyping && (\n          <div className=\"message bot typing\">\n            <div className=\"bot-avatar\"></div>\n            <div className=\"typing-indicator\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          </div>\n        )}\n\n        <div ref={messagesEndRef} />\n      </div>\n\n      <div className=\"chatbot-input\">\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            value={inputMessage}\n            onChange={(e) => setInputMessage(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Ask about your document...\"\n            className=\"chat-input\"\n          />\n          <button onClick={handleSendMessage} className=\"send-button\">\n            <span></span>\n          </button>\n        </div>\n        <div className=\"suggestions\">\n          <span>Try asking:</span>\n          <button onClick={() => setInputMessage(\"What are the main points?\")}>Main points</button>\n          <button onClick={() => setInputMessage(\"Summarize the recommendations\")}>Recommendations</button>\n          <button onClick={() => setInputMessage(\"Key findings?\")}>Key findings</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}